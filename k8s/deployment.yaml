
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: catalog
    chart: catalog-0.6.0
    heritage: Tiller
    release: bluecompute
    tier: backend
    version: v1
  name: catalog
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalog
      chart: catalog-0.6.0
      heritage: Tiller
      release: bluecompute
      tier: backend
      version: v1
  template:
    metadata:
      labels:
        app: catalog
        chart: catalog-0.6.0
        heritage: Tiller
        release: bluecompute
        tier: backend
        version: v1
    spec:
      containers:
      - env:
        - name: SERVICE_PORT
          value: "8081"
        - name: JAVA_TMP_DIR
          value: /spring-tmp
        - name: ES_URL
          value: ${ES_PROTOCOL}://${ES_HOST}:${ES_PORT}
        - name: ES_HOST
          value: catalog-elasticsearch-client
        - name: ES_PROTOCOL
          value: http
        - name: ES_PORT
          value: "9200"
        - name: ES_HEALTH
          value: _cat/health
        - name: INVENTORY_URL
          value: http://inventory:8080
        image: __IMAGE__
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /health
            port: 8091
            scheme: HTTP
          initialDelaySeconds: 35
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: catalog
        ports:
        - containerPort: 8081
          protocol: TCP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /health
            port: 8091
            scheme: HTTP
          initialDelaySeconds: 20
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 384Mi
          requests:
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2000
        volumeMounts:
        - mountPath: /spring-tmp
          name: spring-tmp
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/sh
        - -c
        - set -x; until curl -k ${ES_PROTOCOL}://${ES_HOST}:${ES_PORT}/${ES_HEALTH}
          | grep -E 'green|yellow'; do echo waiting for elasticsearch; sleep 1;
          done; echo elasticsearch is ready
        env:
        - name: ES_URL
          value: ${ES_PROTOCOL}://${ES_HOST}:${ES_PORT}
        - name: ES_HOST
          value: catalog-elasticsearch-client
        - name: ES_PROTOCOL
          value: http
        - name: ES_PORT
          value: "9200"
        - name: ES_HEALTH
          value: _cat/health
        image: alexeiled/curl:latest
        imagePullPolicy: IfNotPresent
        name: test-elasticsearch
        resources:
          limits:
            memory: 384Mi
          requests:
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2000
      - command:
        - /bin/sh
        - -c
        - until curl ${INVENTORY_URL}; do echo waiting for inventory-service at
          ${INVENTORY_URL}; sleep 1; done; echo inventory is ready
        env:
        - name: INVENTORY_URL
          value: http://inventory:8080
        image: alexeiled/curl:latest
        imagePullPolicy: IfNotPresent
        name: test-inventory
        resources:
          limits:
            memory: 384Mi
          requests:
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 2000
      volumes:
      - emptyDir:
          medium: Memory
        name: spring-tmp
